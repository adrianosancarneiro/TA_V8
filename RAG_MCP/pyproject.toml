[project]
name = "ta-v8-rag-mcp"
version = "1.0.0"
description = "Multi-Agent RAG MCP System for TA_V8"
authors = [
    { name = "TA_V8 Team", email = "team@ta-v8.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.12"
keywords = ["rag", "mcp", "multi-agent", "ai", "retrieval"]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "asyncpg>=0.29.0",
    "qdrant-client>=1.7.0",
    "httpx>=0.25.2",
    "tiktoken>=0.5.2",
    "python-multipart>=0.0.6",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    # Advanced chunking and NLP dependencies
    "sentence-transformers>=2.2.2",
    "ruptures>=1.1.9",
    "spacy>=3.7.2",
    "numpy>=1.24.3",
    # Multi-agent system dependencies
    "openai>=1.3.7",
    "anthropic>=0.7.8",
    # Ollama client for LLM-assisted chunking
    "ollama>=0.2.1",
    # MinIO client for object storage
    "minio>=7.2.0",
    # Configuration management
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.1.0",
    "pip>=25.2",
    "langgraph>=0.6.7",
    "autogen>=0.9.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/adrianosancarneiro/TA_V8"
Repository = "https://github.com/adrianosancarneiro/TA_V8.git"
Issues = "https://github.com/adrianosancarneiro/TA_V8/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
only-include = [
    "unified_mcp_server.py",
    "rag_agent_team.py", 
    "tao_integration.py",
    "test_rag_pipeline.py",
    "shared/",
    "__init__.py"
]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "httpx>=0.28.1",
    "neo4j>=5.28.2",
    "minio>=7.2.16",
]

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["shared"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
